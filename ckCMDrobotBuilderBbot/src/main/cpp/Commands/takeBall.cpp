// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

 
#include "Commands/takeBall.h"
#include <rev/SparkMax.h>
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR


takeBall::takeBall(std::shared_ptr<frc::Button> button1, double speed1): frc::Command() {
    m1_speed = speed1;
    m1_button = button1;
    // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::intake.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void takeBall::Initialize() {
    Robot::intake->intake->Set(0);
}

// Called repeatedly when this Command is scheduled to run
void takeBall::Execute() {
    if (m1_button->Get()){
        Robot::intake->intake->Set(m1_speed);
        localFinishFlag = false;
    } else {
        Robot::intake->intake->Set(m1_speed);
        localFinishFlag = true;
    }
    // Cancel();
    // std::cout<<"i am in execute";
}

// Make this return true when this Command no longer needs to run execute()
bool takeBall::IsFinished() {
    return localFinishFlag;
}

// Called once after isFinished returns true
void takeBall::End() {
    Robot::intake->intake->Set(0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void takeBall::Interrupted() {
    Robot::intake->intake->Set(0);

}
